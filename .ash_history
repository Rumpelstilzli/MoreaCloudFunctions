ls
rm test 
firebase login
firebase init
git init
firebase deploy
firebase login
firebase --version
firebase deploy
firebase deploy --only "functions:createUserMap
"
firebase deploy --only "functions:createUserMap"
exit
firebase --version
firebase deploy --only "functions:createUserMap"
firebase deploy -except "function:createUserMap"
firebase deploy 
clean
clear
exit
apt-get 
cd /bin/bash
ls
apt-get
pub
dart
pub
firebase deploy 
firebase deploy --only priviledgeTN
firebase deploy --only functions:priviledgeTN
firebase deploy --only functions:
firebase deploy --only "functions:priviledgeTN"
firebase deploy --only "functions:priviledgeTN"
clear
firebase deploy --only "functions:priviledgeTN"
firebase deploy 
firebase deploy --only "functions:priviledgeTN"
let lmap:Map<string, any> = new Map(Object.entries(data.get(userID)[groupMapPriviledge]))
                if(this.priviledge == undefined)
                   this.priviledge = new Map<string, PriviledgeEntry>(Object.entries({[userID]: new PriviledgeEntry(lmap, map)}))
                else this.priviledge.set(userID, new PriviledgeEntry(lmap, map))
                if(groupMapDisplayName in data.get(userID))
                    this.priviledge.get(userID)!.displayName = data.get(userID)[groupMapDisplayName]
                if(groupMapGroupJoinDate in data.get(userID))
firebase deploy --only "functions:priviledgeTN"
exit
